{"ts":1341119574636,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"/* \nNOTE: The Trello client library has been included as a Managed Resource.  To include the client library in your own code, you would include jQuery and then\n\n<script src=\"https://api.trello.com/1/client.js?key=your_application_key\">...\n\nSee https://trello.com/docs for a list of available API URLs\n\nThe API development board is at https://trello.com/api\n\nThe &dummy=.js part of the managed resource URL is required per http://doc.jsfiddle.net/basic/introduction.html#add-resources\n*/\n//-Basics-\nvar updateLoggedIn = function() {\n    var isLoggedIn = Trello.authorized();\n    $(\"#loggedout\").toggle(!isLoggedIn);\n    $(\"#loggedin\").toggle(isLoggedIn);\n};\nvar logout = function() {\n    Trello.deauthorize();\n    updateLoggedIn();\n};\nTrello.authorize({\n    interactive: false,\n    success: onAuthorize\n});\n$(\"#connectLink\").click(function() {\n    Trello.authorize({\n        type: \"popup\",\n        success: onAuthorize\n    });\n});\n$(\"#disconnect\").click(logout);\n//Connect\nvar onAuthorize = function() {\n    updateLoggedIn();\n    $(\"#output\").empty();\n    //get member info\n    Trello.members.get(\"me\", function(member) {\n        ShowUsername(member);\n        localStorage.memberId = member.id;\n        localStorage.connectTime = moment(new Date()).utc();\n        $(\"<div>\").text(\"Loading Data...\").appendTo(\"#output\");\n        try {\n            //Display member boards\n            if (member.idBoards.length > 0) {\n                $(\"#output\").text(\"\");\n                $(\"<select>\").attr({\n                    id: 'boards',\n                    class: 'span4'\n                }).appendTo(\"#output\");\n                $('#boards').append(new Option(\"Select Board\", null));\n                $('#boards').change(function(e) {\n                    ChangeBoard($(this).val());\n                });\n                $.each(member.idBoards, function(index, value) {\n                    Trello.get('/boards/' + value, {}, function(r) {\n                        //console.log(r);\n                        if (!r.closed) {\n                            if (r.desc !== null) {\n                                $('#boards').append(new Option(r.name, r.id));\n                            }\n                        }\n                    });\n                });\n            }\n        } catch (e) {\n            //Dont work\n            console.log('Error al cargar Boards' + e);\n        }\n    });\n};\n//Load Board,List,Card\nvar ChangeBoard = function(boardId) {\n    if (boardId !== null) {\n        try {\n            $(\"#lists> option\").remove();\n            $(\"#cards> option\").remove();\n            $('#lists').append(new Option(\"Select List\", \"noId\"));\n        } catch (e) {}\n        Trello.get('/boards/' + boardId + '/lists', {}, function(lists) {\n            if (!$(\"#lists\").length) {\n                $(\"<select>\").attr({\n                    id: 'lists',\n                    class: 'span4'\n                }).appendTo(\"#output\");\n                $('#lists').append(new Option(\"Select List\", \"noId\"));\n            }\n            $('#lists').change(function(e) {\n                ChangeList($(this).val());\n            });\n            $.each(lists, function(index, list) {\n                //console.log(list);\n                if (!list.closed) {\n                    $('#lists').append(new Option(list.name, list.id));\n                }\n            });\n        });\n    }\n}\nvar ChangeList = function(listId) {\n    console.log(listId);\n    if (listId !== \"noId\") {\n        try {\n            $(\"#cards> option\").remove();\n        } catch (e) {}\n        Trello.get('/lists/' + listId + '/cards', {}, function(cards) {\n            console.log(cards);\n            if (!$(\"#cards\").length) {\n                $(\"<select>\").attr({\n                    id: 'cards',\n                    class: 'span4'\n                }).appendTo(\"#output\");\n            }\n            $('#cards').change(function(e) {\n                ChangeCard($(this).val());\n            });\n            $.each(cards, function(index, card) {\n                console.log(card);\n                if (!card.closed) {\n                    console.log(\"localStorage.memberId\" + localStorage.memberId);\n                    $.each(card.idMembers, function(index, member) {\n                        console.log(\"member\" + member);\n                        if (member == localStorage.memberId) {\n                            $('#cards').append(new Option(card.name, card.id));\n                        }\n                    });\n                }\n            });           \n            if ($('#cards option').length > 0) {\n            console.log('Tarjetas asignadas' + $('#cards option').length );\n            }else{\n            console.log('No hay tarjetas asignadas');\n            }\n        });\n    }\n}\nvar ChangeCard = function(cardId) {\n    console.log(cardId);\n    try {\n        console.log(\"Change card\");\n    } catch (e) {\n        console.log(\"Error Change card\" + e);\n    }\n}\n//Set divs with user info\nvar ShowUsername = function(member) {\n    try {\n        $(\"#linkProfile\").attr('href', function(i) {\n            return \"https://trello.com/\" + member.username;\n        });\n        $(\"#linkProfile2\").attr('href', function(i) {\n            return \"https://trello.com/\" + member.username;\n        });\n        $(\"#fullName\").val(member.fullName);\n    } catch (e) {\n        console.log('Error al cargar datos del usuario ' + e)\n    }\n};\n//THE REAL FUN\n$(\"#btnLog\").click(function() {\n    var input = $(\"#logInput\");\n    var log = $(\"#logHistory\");\n    console.log(input);\n    if (input.val() != \"\") {\n        var now = moment(new Date()).utc();\n        var dataString = now.format(\"MMMM Do YYYY, h:mm a\") + '\\n' + input.val() + '\\n' + log.val();\n        log.val(dataString);\n        input.val('');\n    }\n});\n$(\"#btnStart\").click(function() {\n    if (!$(\"#cards\").length) {\n        console.log(\"no hay tarea escogida\");\n    } else {\n        try {\n            var now = moment(new Date()).utc();\n            var dataString = \"\\n\" + now.format(\"MMMM Do YYYY, h:mm a\") + \" UTC\" + \"\\n\";\n            if (localStorage.cardStart) {\n                localStorage.cardStart = false;\n                dataString += \"<strong>Finish working on </strong> \" + $(\"#cards option:selected\").text();\n                $(\"#output\").show();\n            } else {\n                localStorage.cardStart = true;\n                dataString += \"<strong>Start working in </strong> \" + $(\"#cards option:selected\").text();\n                $(\"#output\").hide();\n            }\n            $(\"#logHistory\").val(function(prev) {\n                if (prev == 0) {\n                    return dataString;\n                } else {\n                    return prev + dataString;\n                }\n            });\n            \n        }\n        catch (e) {\n            console.log(\"fallo actualizar log\");\n        }\n    }\n});â€‹"]],"start1":0,"start2":0,"length1":0,"length2":6799}]],"length":6799}
{"contributors":[],"silentsave":false,"ts":1365617873253,"patch":[[{"diffs":[[0,"        "],[-1,""],[1,"//"],[0,"ShowUser"]],"start1":1121,"start2":1121,"length1":16,"length2":18},{"diffs":[[0,"id;\n"],[-1,"        localStorage.connectTime = moment(new Date()).utc();\n"],[0,"    "]],"start1":1192,"start2":1192,"length1":69,"length2":8},{"diffs":[[0,"dTo(\"#output\");\n"],[1,"\n"],[0,"        try {\n  "]],"start1":1244,"start2":1244,"length1":32,"length2":33},{"diffs":[[0,") {\n"],[-1,"                $(\"#output\").text(\"\");\n"],[0,"    "]],"start1":1353,"start2":1353,"length1":47,"length2":8},{"diffs":[[0,"rds'"],[-1,",\n                    class: 'span4'"],[0,"\n   "]],"start1":1422,"start2":1422,"length1":44,"length2":8},{"diffs":[[0," });\n};\n"],[1,"\n"],[0,"//Load B"]],"start1":2231,"start2":2231,"length1":16,"length2":17},{"diffs":[[0,"sts'"],[-1,",\n                    class: 'span4'"],[1,""],[0,"\n   "]],"start1":2694,"start2":2694,"length1":44,"length2":8},{"diffs":[[0,"rds'"],[-1,",\n                    class: 'span4'"],[1,""],[0,"\n   "]],"start1":3553,"start2":3553,"length1":44,"length2":8},{"diffs":[[0,"            });\n"],[1,"            // recorrer tarjetas\n"],[0,"            $.ea"]],"start1":3700,"start2":3700,"length1":32,"length2":65},{"diffs":[[0,"ex, card) {\n"],[1,"                console.log('card');\n"],[0,"            "]],"start1":3787,"start2":3787,"length1":24,"length2":61},{"diffs":[[0,"                "],[1,"console.log('Card not closed');\n                    //"],[0,"console.log(\"loc"]],"start1":3911,"start2":3911,"length1":32,"length2":86},{"diffs":[[0,"                "],[1,"$('#cards').append(new Option(card.name, card.id));\n                    //Check Member or card\n                    //"],[0,"$.each(card.idMe"]],"start1":4047,"start2":4047,"length1":32,"length2":149},{"diffs":[[0,"                "],[1,"//"],[0,"    console.log("]],"start1":4233,"start2":4233,"length1":32,"length2":34},{"diffs":[[0,"                "],[1,"//"],[0,"    if (member ="]],"start1":4291,"start2":4291,"length1":32,"length2":34},{"diffs":[[0," (member"],[1,".id"],[0," == loca"]],"start1":4315,"start2":4315,"length1":16,"length2":19},{"diffs":[[0,"                "],[1,"//"],[0,"        $('#card"]],"start1":4359,"start2":4359,"length1":32,"length2":34},{"diffs":[[0,"                "],[1,"//"],[0,"    }\n          "]],"start1":4441,"start2":4441,"length1":32,"length2":34},{"diffs":[[0,"                "],[1,"//"],[0,"});\n            "]],"start1":4469,"start2":4469,"length1":32,"length2":34},{"diffs":[[0,"               }"],[1," else {"],[0,"\n            });"]],"start1":4492,"start2":4492,"length1":32,"length2":39},{"diffs":[[0,"    "],[-1,"    });           \n            if ($('#cards option').length > 0) {\n"],[0,"    "]],"start1":4520,"start2":4520,"length1":76,"length2":8},{"diffs":[[0,"og('"],[-1,"Tarjetas asignadas' + $('#cards option').length );\n            }else{\n            console.log('No hay tarjetas asignadas');"],[1,"Card closed');\n                }"],[0,"\n   "]],"start1":4545,"start2":4545,"length1":131,"length2":40},{"diffs":[[0," }\n            }"],[1,");"],[0,"\n        });\n   "]],"start1":4579,"start2":4579,"length1":32,"length2":34},{"diffs":[[0,"    "],[-1,"console.log(cardId);\n    try {"],[1,"try {\n        //todo stop working on before card"],[0,"\n   "]],"start1":4654,"start2":4654,"length1":38,"length2":56},{"diffs":[[0,"log("],[-1,"\""],[1,"'"],[0,"Change"],[1,"Card' +"],[0," card"],[-1,"\""],[1,"Id"],[0,");\n "]],"start1":4723,"start2":4723,"length1":21,"length2":29},{"diffs":[[0,"$(\"#"],[-1,"linkProfile\").attr('href', function(i) {\n            return "],[1,"fullName\").text(member.fullName);\n        $(\"#linkProfile\").href("],[0,"\"htt"]],"start1":4905,"start2":4905,"length1":68,"length2":73},{"diffs":[[0,"ber.username"],[-1,";\n        }"],[0,");\n        $"]],"start1":5001,"start2":5001,"length1":35,"length2":24},{"diffs":[[0,"2\")."],[-1,"attr('href', function(i) {\n            return \"https://trello.com/\" + member.username;\n        });\n        $(\"#fullName\").val(member.fullN"],[1,"href(\"https://trello.com/\" + member.usern"],[0,"ame)"]],"start1":5039,"start2":5039,"length1":146,"length2":49},{"diffs":[[0,"N\n$("],[-1,"\""],[1,"'"],[0,"#btn"],[1,"Register"],[0,"Log"],[-1,"\""],[1,"'"],[0,").cl"]],"start1":5192,"start2":5192,"length1":17,"length2":25},{"diffs":[[0,"ck(function() {\n"],[1,"    console.log('GetAndUpdateText');\n    var textos = $(\"#logInput\").val();\n    console.log(textos);\n    $(\"#logHistory\").text($(\"#logInput\").val());\n\n"],[0,"    var input = "]],"start1":5218,"start2":5218,"length1":32,"length2":183},{"diffs":[[0,";\n    }\n});\n"],[1,"\n"],[0,"$(\"#btnStart"]],"start1":5697,"start2":5697,"length1":24,"length2":25},{"diffs":[[0," \"\\n"],[1,"#   "],[0,"\" + now."],[-1,"format(\"MMMM Do YYYY, h:mm a\") + \" UTC"],[1,"calendar() + \" (utc) "],[0,"\" + "]],"start1":5924,"start2":5924,"length1":54,"length2":41},{"diffs":[[0,"+= \""],[-1,"<strong>Finish working on </strong> "],[1,"END WORKING in '"],[0,"\" + "]],"start1":6088,"start2":6088,"length1":44,"length2":24},{"diffs":[[0,"xt()"],[-1,";\n                $(\"#output\").show"],[1," + \"' of list \" + $(\"#lists option:selected\").text"],[0,"();\n"]],"start1":6142,"start2":6142,"length1":43,"length2":58},{"diffs":[[0,"+= \""],[-1,"<strong>Start working in </strong> "],[1,"START WORKING in '"],[0,"\" + "]],"start1":6295,"start2":6295,"length1":43,"length2":26},{"diffs":[[0,"xt()"],[-1,";\n                $(\"#output\").hide"],[1," + \"' of list \" + $(\"#lists option:selected\").text"],[0,"();\n"]],"start1":6351,"start2":6351,"length1":43,"length2":58},{"diffs":[[0,"});\n"],[-1,"            \n"],[0,"    "]],"start1":6646,"start2":6646,"length1":21,"length2":8},{"diffs":[[0,"\n});"],[-1,"â€‹"],[1,""]],"start1":6744,"start2":6744,"length1":5,"length2":4}]],"length":6748,"saved":false}
